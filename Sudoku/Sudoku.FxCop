<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files (x86)\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="de-DE" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/bin/Debug/Sudoku.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Namespaces>
   <Namespace Name="DE.ONNEN.Sudoku">
    <Messages>
     <Message Id="ONNEN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-08-04 20:48:28Z">
      <Issue Name="Namespace">
       <Item>ONNEN</Item>
       <Item>DE.ONNEN.Sudoku</Item>
       <Item>Onnen</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/bin/Debug/Sudoku.exe">
    <Modules>
     <Module Name="sudoku.exe">
      <Namespaces>
       <Namespace Name="DE.ONNEN.Sudoku">
        <Types>
         <Type Name="Board">
          <Members>
           <Member Name="#Givens">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'List&lt;Cell&gt;'</Item>
               <Item>'Board.Givens'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#History">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'List&lt;SudokuHistoryItem&gt;'</Item>
               <Item>'Board.History'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetDigit(System.Int32,System.Int32,System.Int32)">
            <Messages>
             <Message Id="row*9" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>row*9</Item>
               <Item>'Board.SetDigit(int, int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetHistory(System.Int32)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Board.SetHistory(int)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Show(System.Boolean)">
            <Messages>
             <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Board.Show(bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Solve(DE.ONNEN.Sudoku.SudokuExternal.SudokuLog,System.Boolean)">
            <Messages>
             <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Board.Solve(SudokuLog, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="forceSolve" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2014-08-04 20:48:28Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'forceSolve'</Item>
               <Item>'Board.Solve(SudokuLog, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#boardChangeEvent" Kind="Event">
            <Messages>
             <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Created="2014-08-04 20:48:28Z">
              <Issue Name="First">
               <Item>'Board.BoardChanged'</Item>
              </Issue>
              <Issue Name="Second">
               <Item>'Board.BoardChanged'</Item>
              </Issue>
             </Message>
             <Message Id="board" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-08-04 20:48:28Z">
              <Issue Name="Member">
               <Item>board</Item>
               <Item>'Board.boardChangeEvent'</Item>
               <Item>Board</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Board+BoardChanged">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2014-08-04 20:48:28Z">
            <Issue>
             <Item>'Board.BoardChanged'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="Cell">
          <Members>
           <Member Name="#Candidates">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'List&lt;int&gt;'</Item>
               <Item>'Cell.Candidates'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Digit">
            <Accessors>
             <Accessor Name="#set_Digit(System.Int32)">
              <Messages>
               <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-08-04 20:48:28Z">
                <Issue Name="TooGeneric">
                 <Item>'Cell.Digit.set(int)'</Item>
                 <Item>'Exception'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#RemoveCandidate(System.Int32,DE.ONNEN.Sudoku.SudokuExternal.SudokuLog)">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Cell.RemoveCandidate(int, SudokuLog)'</Item>
               <Item>'digit'</Item>
               <Item>'candidate'</Item>
               <Item>'ICell.RemoveCandidate(int, SudokuLog)'</Item>
              </Issue>
             </Message>
             <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Cell.RemoveCandidate(int, SudokuLog)'</Item>
               <Item>'sudokuResult'</Item>
               <Item>'child'</Item>
               <Item>'ICell.RemoveCandidate(int, SudokuLog)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetDigit(System.Int32,DE.ONNEN.Sudoku.SudokuExternal.SudokuLog)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Cell.SetDigit(int, SudokuLog)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CellBase">
          <Messages>
           <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Created="2014-08-04 20:48:28Z">
            <Issue Name="Member">
             <Item>'candidateValue'</Item>
             <Item>CandidateValue</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#candidateValue">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'CellBase.candidateValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetField`1(!!0&amp;,!!0,System.String)">
            <Messages>
             <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2014-08-04 20:48:28Z">
              <Issue Level="CriticalWarning">
               <Item>'field'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Program">
          <Messages>
           <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Created="2014-08-04 20:48:28Z">
            <Issue>
             <Item>'Program'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Complete(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.Complete(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Extreme(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.Extreme(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Hardest(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.Hardest(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LeftInLine(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.LeftInLine(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Main(System.String[])">
            <Messages>
             <Message Id="args" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2014-08-04 20:48:28Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'args'</Item>
               <Item>'Program.Main(string[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#NakedTripleInBlock(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.NakedTripleInBlock(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#NakedTripleInRow(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.NakedTripleInRow(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnlyInBlock(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.OnlyInBlock(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnlyInBlock2(DE.ONNEN.Sudoku.Board)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'Program.OnlyInBlock2(Board)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SudokuHelper">
          <Members>
           <Member Name="#ReadBoardFromFile(System.String,System.Char)">
            <Messages>
             <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'SudokuHelper.ReadBoardFromFile(string, char)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SudokuHistoryItem">
          <Members>
           <Member Name="#BoardInt">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'SudokuHistoryItem.BoardInt'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CellID">
            <Messages>
             <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-08-04 20:48:28Z">
              <Issue Name="MemberAbbreviation">
               <Item>ID</Item>
               <Item>'SudokuHistoryItem.CellID'</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'string.Format(string, object)'</Item>
               <Item>'SudokuHistoryItem.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'SudokuHistoryItem.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SudokuSolveTechniqueLoader">
          <Members>
           <Member Name="#GetSolveTechnicInfo(System.String)">
            <Messages>
             <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-08-04 20:48:28Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'SudokuSolveTechniqueLoader.GetSolveTechnicInfo(string)'</Item>
               <Item>filename</Item>
               <Item>'filename'</Item>
               <Item>fileName</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'SudokuSolveTechniqueLoader.GetSolveTechnicInfo(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LoadSolveTechnic(System.String,DE.ONNEN.Sudoku.SudokuExternal.ISudokuHost)">
            <Messages>
             <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-08-04 20:48:28Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'SudokuSolveTechniqueLoader.LoadSolveTechnic(string, ISudokuHost)'</Item>
               <Item>filename</Item>
               <Item>'filename'</Item>
               <Item>fileName</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-08-04 20:48:28Z">
              <Issue>
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'SudokuSolveTechniqueLoader.LoadSolveTechnic(string, ISudokuHost)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   </Rule>
   <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
    <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
    <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   </Rule>
   <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
    <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
    <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   </Rule>
   <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
    <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   </Rule>
   <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
    <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
    <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
    <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   </Rule>
   <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
    <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   </Rule>
   <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
    <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   </Rule>
   <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
    <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   </Rule>
   <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
    <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   </Rule>
   <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
    <Resolution Name="Default">Remove the public constructors from {0}.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
